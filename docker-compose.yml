version: '3.8'

services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bookverse_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - APP_ENV=${APP_ENV:-local}
      - APP_DEBUG=${APP_DEBUG:-true}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-bookverse}
      - DB_USERNAME=${DB_USERNAME:-bookverse_user}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-null}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION:-redis}
      - CACHE_STORE=${CACHE_STORE:-redis}
    networks:
      - bookverse_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "php-fpm", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: bookverse_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - bookverse_network
    depends_on:
      app:
        condition: service_healthy

  # MySQL Service
  db:
    image: mysql:8.0
    container_name: bookverse_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-bookverse}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_USER: ${DB_USERNAME:-bookverse_user}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
      - dbdata:/var/lib/mysql
    networks:
      - bookverse_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-root_password}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Service
  redis:
    image: redis:alpine
    container_name: bookverse_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - bookverse_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bookverse_queue
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    environment:
      - APP_ENV=${APP_ENV:-local}
      - APP_DEBUG=${APP_DEBUG:-true}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-bookverse}
      - DB_USERNAME=${DB_USERNAME:-bookverse_user}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-null}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION:-redis}
      - CACHE_STORE=${CACHE_STORE:-redis}
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    networks:
      - bookverse_network
    depends_on:
      app:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  dbdata:
    driver: local
  redisdata:
    driver: local

networks:
  bookverse_network:
    driver: bridge 